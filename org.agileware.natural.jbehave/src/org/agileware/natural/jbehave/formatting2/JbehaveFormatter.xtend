/*
 * generated by Xtext 2.22.0
 */
package org.agileware.natural.jbehave.formatting2

import com.google.inject.Inject
import org.agileware.natural.jbehave.jbehave.Narrative
import org.agileware.natural.jbehave.jbehave.Story
import org.agileware.natural.jbehave.services.JbehaveGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class JbehaveFormatter extends AbstractFormatter2 {
	
	@Inject extension JbehaveGrammarAccess

	def dispatch void format(Story story, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		story.meta.format
		story.narrative.format
		for (scenario : story.scenarios) {
			scenario.format
		}
	}

	def dispatch void format(Narrative narrative, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		narrative.inOrderTo.format
		narrative.asA.format
		narrative.IWantTo.format
	}
	
	// TODO: implement for Scenario, GivenStories, Meta, Step, Examples
}
