/*
 * generated by Xtext 2.23.0-SNAPSHOT
 */
package org.agileware.natural.lang.tests

import org.agileware.natural.lang.model.DocumentModel
import org.agileware.natural.testing.AbstractExamplesTest
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.junit.Test
import org.junit.runner.RunWith

import static org.hamcrest.MatcherAssert.*
import static org.hamcrest.Matchers.*

@RunWith(XtextRunner)
@InjectWith(NaturalInjectorProvider)
class NaturalParsingTest  extends AbstractExamplesTest<DocumentModel> {
	
	@Test
	def void helloDocumntModel() {
		
		val model = parse('''
			Section: Hello, Document Model!
				The quick brown fox
				Jumps over the lazt dog
		''')

		assertThat(model, notNullValue())
		assertThat(validate(model), empty())
		
		assertThat(model.sections, hasSize(1))
		assertThat(model.sections.get(0).title, 
				equalTo("Hello, Document Model!"))
		
		assertThat(model.sections.get(0).narrative, 
				equalTo('''
					The quick brown fox
					Jumps over the lazt dog
				'''))
	}
	
//	@Test
//	def void testSectionsWithBlankLines() {
//		
//		val model = parse('''
//			Section: Hello, Document Model!
//		''')
//
//		assertThat(model, notNullValue())
//		assertThat(validate(model), empty())
//	}
}
